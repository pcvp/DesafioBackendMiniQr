// <auto-generated />
using System;
using DesafioBackendMiniQrApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioBackendMiniQrApi.Data.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20231107201429_Charge.CancelledByUser")]
    partial class ChargeCancelledByUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DesafioBackendMiniQrApi.Domain.Entities.Charge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CancelledByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("QrCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CancelledByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Charges", "MiniQr");
                });

            modelBuilder.Entity("DesafioBackendMiniQrApi.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", "MiniQr");
                });

            modelBuilder.Entity("DesafioBackendMiniQrApi.Domain.Entities.Charge", b =>
                {
                    b.HasOne("DesafioBackendMiniQrApi.Domain.Entities.User", "CancelledByUser")
                        .WithMany()
                        .HasForeignKey("CancelledByUserId");

                    b.HasOne("DesafioBackendMiniQrApi.Domain.Entities.User", "User")
                        .WithMany("Charges")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CancelledByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DesafioBackendMiniQrApi.Domain.Entities.User", b =>
                {
                    b.Navigation("Charges");
                });
#pragma warning restore 612, 618
        }
    }
}
